/*!
 * Start Bootstrap - SB Admin 2 v4.1.4 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2021 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */

var videoPose,webcamPose,video=document.getElementById("video"),canvasVideo=document.createElement("canvas"),webcam=document.getElementById("webcam"),canvasWebcam=document.createElement("canvas");canvasWebcam.width=webcam.offsetWidth,canvasWebcam.height=webcam.offsetHeight,canvasVideo.width=video.offsetWidth,canvasVideo.height=video.offsetHeight;let detectorConfig,detector;function playVideo(){video.play(),window.requestAnimationFrame(captureVideo)}function pauseVideo(){video.pause()}async function capture(){canvasWebcam.getContext("2d").drawImage(webcam,0,0,canvasWebcam.width,canvasWebcam.height);webcamPose=await detector.estimatePoses(canvasWebcam),window.requestAnimationFrame(capture)}async function captureVideo(){canvasVideo.getContext("2d").drawImage(video,0,0,canvasVideo.width,canvasVideo.height);videoPose=await detector.estimatePoses(canvasVideo);var e=poseSimilarity(webcamPose[0].keypoints,videoPose[0].keypoints);console.log(e),window.requestAnimationFrame(captureVideo)}function weightedDistanceMatchin(e,t,o){for(var a=1/o[o.length-1],i=0,n=0;n<e.length;n++)i+=o[Math.floor(n/2)]*Math.abs(e[n]-t[n]);return a*i}function vectorizeAndNormalize(e,t){t=convertPoseToVector(e,t.customWeight);return vectorPoseXY=t[0],vectorPoseTransform=t[1],vectorPoseConfidences=t[2],vectorPoseXY=scaleAndTranslate(vectorPoseXY,vectorPoseTransform),vectorPoseXY=L2Normalization(vectorPoseXY),[vectorPoseXY,vectorPoseConfidences]}function convertPoseToVectors(e,t){var r,s,c=[],d=Number.POSITIVE_INFINITY,m=Number.POSITIVE_INFINITY,h=Number.NEGATIVE_INFINITY,u=0,p=[];if(t){if(!(r=t.mode)||"string"!=typeof r)throw new TypeError("[Bad customWeight option] A mode must be specified and should be either 'multiply', 'replace' or 'add'.");if("object"!=typeof(s=t.scores)&&!Array.isArray(s))throw new TypeError("[Bad customWeight option] scores must be Object or Number[].\n      Please refer the document https://github.com/freshsomebody/posenet-similarity to set it correctly.")}return e.keypoints.forEach(function(e,t){var o=e.position.x,a=e.position.y;c.push(o,a),d=Math.min(d,o),m=Math.min(m,a),h=Math.max(h,Math.max(o,a));var i=e.score;if(r&&s){var n=!1;if(!s[e.part]&&0!==s[e.part]||(n=s[e.part]),((n=s[t]||0===s[t]?s[t]:n)||0===n)&&"number"==typeof n)switch(r){case"multiply":i*=n;break;case"replace":i=n;break;case"add":i+=n;break;default:throw new Error("[Bad customWeight option] A mode must be specified and should be either 'multiply', 'replace' or 'add'")}}u+=i,p.push(i)}),p.push(u),[c,[d/h,m/h,h],p]}function scaleAndTranslate(e,t){var o=t[0],a=t[1],i=t[2];return e.map(function(e,t){return t%2==0?e/i-o:e/i-a})}function L2Normalization(e){var t=0;return e.forEach(function(e){t+=Math.pow(e,2)}),t=Math.sqrt(t),e.map(function(e){return e/t})}function poseSimilarity(e,t,o){if(!(e&&e.keypoints&&t&&t.keypoints))throw new Error("[Bad pose parameters] Please check your pose objects again.");if(0===e.keypoints.length||0===t.keypoints.length)throw new Error("[Bad pose parameters] Found pose object(s) with empty keypoint.");if(e.keypoints.length!==t.keypoints.length)throw new Error("[Bad pose parameters] The keypoint lengths of the two pose objects are not the same.");var o=Object.assign({},{strategy:"weightedDistance"},o),e=vectorizeAndNormalize(e,o),a=e[0],i=e[1],n=vectorizeAndNormalize(t,o)[0];if("string"!=typeof o.strategy){if("function"==typeof o.strategy)return o.strategy(a,n,i);throw new TypeError("[Bad strategy option] It only accepts string or function types of values.")}switch(o.strategy){case"cosineSimilarity":return cosineSimilarity(a,n);case"cosineDistance":return cosineDistanceMatching(a,n);case"weightedDistance":return weightedDistanceMatching(a,n,i);default:throw new Error("[Bad strategy option] It should be either 'cosineSimilarity', 'cosineDistance' or 'weightedDistance' (default).")}}console.log(canvasVideo.width,canvasVideo.height),window.onload=async function(){detector=await poseDetection.createDetector(poseDetection.SupportedModels.MoveNet),navigator.mediaDevices.getUserMedia({video:!0}).then(function(e){console.log("webcam works!"),console.log(e),webcam.srcObject=e}).catch(function(e){console.log("Something went wrong!")}),window.requestAnimationFrame(capture)};